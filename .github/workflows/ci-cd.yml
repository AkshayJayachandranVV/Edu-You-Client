name: Deploy React App to S3 and invalidate cloudfront

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Create .env file
        run: |
          echo "VITE_GOOGLE_CLIENT_ID=${{ secrets.VITE_GOOGLE_CLIENT_ID }}" >> .env
          echo "VITE_STRIPE_PUBLIC_KEY=${{ secrets.VITE_STRIPE_PUBLIC_KEY }}" >> .env
          echo "VITE_API_GATEWAY_BASE_URL=${{ secrets.VITE_API_GATEWAY_BASE_URL }}" >> .env
          echo "VITE_API_GATEWAY_USER_URL=${{ secrets.VITE_API_GATEWAY_USER_URL }}" >> .env
          echo "VITE_API_GATEWAY_TUTOR_URL=${{ secrets.VITE_API_GATEWAY_TUTOR_URL }}" >> .env
          echo "VITE_API_GATEWAY_COURSE_URL=${{ secrets.VITE_API_GATEWAY_COURSE_URL }}" >> .env
          echo "VITE_LIVE_APP_ID=${{ secrets.VITE_LIVE_APP_ID }}" >> .env
          echo "VITE_LIVE_SERVER_SECRET=${{ secrets.VITE_LIVE_SERVER_SECRET }}" >> .env
          echo "VITE_ADMIN_REFRESH_TOKEN=${{ secrets.VITE_ADMIN_REFRESH_TOKEN }}" >> .env
          echo "VITE_USER_REFRESH_TOKEN=${{ secrets.VITE_USER_REFRESH_TOKEN }}" >> .env
          echo "VITE_TUTOR_REFRESH_TOKEN=${{ secrets.VITE_TUTOR_REFRESH_TOKEN }}" >> .env
          echo "VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}" >> .env



      - name: Display .env file contents
        run: |
          echo "Contents of .env file:"
          cat .env

      - name: Install dependencies
        run: npm ci

      - name: Build React app
        run: npm run build

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.BUCKET_REGION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.S3_BUCKET_REGION }}

      - name: Verify AWS credentials
        run: |
          echo "AWS Access Key ID: ${{ secrets.S3_ACCESS_KEY }}"
          echo "AWS Secret Access Key: ${{ secrets.S3_SECRET_ACCESS_KEY }}"
          echo "AWS Region: ${{ secrets.S3_BUCKET_REGION }}"
          aws sts get-caller-identity --region ${{ secrets.S3_BUCKET_REGION }}

      - name: Deploy to S3
        run: |
          aws s3 sync dist/ s3://${{ secrets.S3_BUCKET_NAME }} --delete
          echo "Deployment completed successfully"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"